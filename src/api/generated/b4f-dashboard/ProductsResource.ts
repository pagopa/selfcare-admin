/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import { SubProductResource } from "./SubProductResource";
import * as t from "io-ts";
import { enumType } from "@pagopa/ts-commons/lib/types";
import { UTCISODateFromString } from "@pagopa/ts-commons/lib/dates";
import { PatternString } from "@pagopa/ts-commons/lib/strings";

export enum StatusEnum {
  "ACTIVE" = "ACTIVE",

  "INACTIVE" = "INACTIVE",

  "PENDING" = "PENDING"
}

// required attributes
const ProductsResourceR = t.interface({
  authorized: t.boolean,

  description: t.string,

  id: t.string,

  imageUrl: t.string,

  logo: t.string,

  status: enumType<StatusEnum>(StatusEnum, "status"),

  title: t.string,

  urlBO: t.string
});

// optional attributes
const ProductsResourceO = t.partial({
  activatedAt: UTCISODateFromString,

  children: t.readonlyArray(SubProductResource, "array of SubProductResource"),

  logoBgColor: PatternString("^#[0-9A-F]{6}$"),

  urlPublic: t.string,

  userRole: t.string
});

export const ProductsResource = t.intersection(
  [ProductsResourceR, ProductsResourceO],
  "ProductsResource"
);

export type ProductsResource = t.TypeOf<typeof ProductsResource>;
